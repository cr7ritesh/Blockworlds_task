(define (domain block-world)
  (:requirements :strips :equality)
  (:types block arm)
  (:predicates (clear ?x)
               (on ?x ?y)
               (ontable ?x)
               (holding ?x ?y))
  (:functions (total-cost))
  (:action pickup
    :parameters (?b - block ?a - arm)
    :precondition (and (clear ?b) (ontable ?b) (empty ?a))
    :effect (and (not (ontable ?b))
                  (not (clear ?b))
                  (holding ?b ?a)
                  (empty ?a))
    :cost 1)
  (:action putdown
    :parameters (?b - block ?a - arm)
    :precondition (and (holding ?b ?a) (not (empty ?a)))
    :effect (and (ontable ?b)
                  (clear ?b)
                  (empty ?a)
                  (not (holding ?b ?a)))
    :cost 1)
  (:action stack
    :parameters (?b1 ?b2 - block)
    :precondition (and (clear ?b1) (on ?b2 ?b1) (not (empty ?a)))
    :effect (and (ontable ?b1)
                  (not (clear ?b1))
                  (empty ?a)
                  (on ?b1 ?b2)
                  (not (on ?b2 ?b1)))
    :cost 1)
  (:action unstack
    :parameters (?b1 ?b2 - block ?a - arm)
    :precondition (and (clear ?b1) (on ?b1 ?b2) (empty ?a))
    :effect (and (holding ?b1 ?a)
                  (empty ?a)
                  (clear ?b2)
                  (ontable ?b1)
                  (not (on ?b1 ?b2)))
    :cost 1)
)