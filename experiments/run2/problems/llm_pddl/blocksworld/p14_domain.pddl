(define (domain block-world)
  (:requirements :strips :equality)
  (:types block arm)
  (:predicates (clear ?x)
               (on ?x ?y)
               (arm-empty)
               (on-table ?x))
  (:action pickup
    :parameters (?blk - block)
    :precondition (and (clear ?blk) (arm-empty) (on-table ?blk))
    :effect (and (not (clear ?blk))
                  (not (arm-empty))
                  (not (on-table ?blk))))
  (:action putdown
    :parameters (?blk - block)
    :precondition (not (arm-empty))
    :effect (and (clear ?blk)
                  (arm-empty)
                  (on-table ?blk)))
  (:action stack
    :parameters (?blk1 ?blk2 - block)
    :precondition (and (not (arm-empty)) (clear ?blk1) (on ?blk2 ?blk1))
    :effect (and (not (clear ?blk1))
                  (arm-empty)
                  (on ?blk1 ?blk2)
                  (not (on ?blk2 ?blk1))))
  (:action unstack
    :parameters (?blk1 ?blk2 - block)
    :precondition (and (arm-empty) (clear ?blk1) (on ?blk1 ?blk2))
    :effect (and (not (clear ?blk1))
                  (not (arm-empty))
                  (not (on ?blk1 ?blk2)))))