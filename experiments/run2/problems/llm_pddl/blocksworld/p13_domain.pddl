(define (domain block-world)
  (:requirements :strips :equality)
  (:types block arm)
  (:predicates (clear ?x - block)
              (on ?x - block ?y - block)
              (ontable ?x - block)
              (holding ?x - block ?y - arm))
  (:functions (total-cost))
  (:action pickup
    :parameters (?b - block ?a - arm)
    :precondition (and (clear ?b) (ontable ?b) (empty ?a))
    :effect (and (holding ?b ?a)
                 (not (ontable ?b))
                 (not (clear ?b))
                 (increase (total-cost) 1)))
  (:action putdown
    :parameters (?b - block ?a - arm)
    :precondition (holding ?b ?a)
    :effect (and (ontable ?b)
                 (clear ?b)
                 (empty ?a)
                 (increase (total-cost) 1)))
  (:action stack
    :parameters (?topblock - block ?bottomblock - block ?a - arm)
    :precondition (and (holding ?topblock ?a) (clear ?bottomblock))
    :effect (and (on ?topblock ?bottomblock)
                 (not (holding ?topblock ?a))
                 (not (clear ?bottomblock))
                 (increase (total-cost) 1)))
  (:action unstack
    :parameters (?topblock - block ?bottomblock - block ?a - arm)
    :precondition (and (clear ?topblock) (empty ?a))
    :effect (and (holding ?topblock ?a)
                 (not (on ?topblock ?bottomblock))
                 (clear ?bottomblock)
                 (increase (total-cost) 1))))