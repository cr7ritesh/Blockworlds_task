(define (domain block-world)
  (:requirements :strips :equality)
  (:types block arm)
  (:predicates (clear ?x)
               (on ?x ?y)
               (holding ?arm ?x))
  (:functions)
  (:action pickup
    :parameters (?arm ?x - block)
    :precondition (and (clear ?x) (not (holding ?arm ?x)))
    :effect (and (holding ?arm ?x)
                 (not (clear ?x))
                 (not (holding ?arm ?y))))
  (:action putdown
    :parameters (?arm ?x - block)
    :precondition (holding ?arm ?x)
    :effect (and (clear ?x)
                 (not (holding ?arm ?x))
                 (not (on ?x ?y))))
  (:action stack
    :parameters (?arm ?x ?y - block)
    :precondition (and (holding ?arm ?x) (clear ?y))
    :effect (and (on ?x ?y)
                 (not (holding ?arm ?x))
                 (not (clear ?y))))
  (:action unstack
    :parameters (?arm ?x ?y - block)
    :precondition (and (clear ?x) (on ?x ?y) (not (holding ?arm ?z)))
    :effect (and (holding ?arm ?x)
                 (clear ?y)
                 (not (on ?x ?y)))))